"""
Django settings for ClinicHub project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from django.contrib.messages import constants as messages
from decouple import config
import dj_database_url




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default='False').lower() in ('true', '1', 'yes')

# DEBUG = True  #محلي


# ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='').split(',')




# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',


    'doctor',
    'patient',
    'accounts',
    'medical_archive',
    'home',
    'appointments',
    'prescription',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',         #اضفناه من اجل الرفع لريندر
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ClinicHub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ClinicHub.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


if DEBUG:
    # Local development settings
    DATABASES = {
        'default': {
            'ENGINE':   'django.db.backends.postgresql',
            'NAME':     config('DB_NAME'),
            'USER':     config('DB_USER'),
            'PASSWORD': config('DB_PASSWORD'),
            'HOST':     config('DB_HOST', default='localhost'),
            'PORT':     config('DB_PORT', default='5432'),
        }
    }
else:
    # Production on Render
    DATABASES = {
        'default': dj_database_url.config(conn_max_age=600, ssl_require=True)
    }




# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Baghdad'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


# Custom user model
AUTH_USER_MODEL = 'accounts.User'

# Authentication redirects
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/accounts/login/'


# Message tags (Bootstrap-compatible)
MESSAGE_TAGS = {
    messages.ERROR: "danger"
}

# Crispy Forms (if used)
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ----------------------------------------
# Email settings (for Password Reset)
# ----------------------------------------
# During development, print emails to console:
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'no-reply@clinichub.local'

# To use actual SMTP in production, uncomment and configure:
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = config('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
# DEFAULT_FROM_EMAIL = 'no-reply@clinichub.com'


# ----------------------------------------
# Twilio settings (for OTP via phone)
# ----------------------------------------
TWILIO_ACCOUNT_SID = config('TWILIO_ACCOUNT_SID', default='')
TWILIO_AUTH_TOKEN = config('TWILIO_AUTH_TOKEN', default='')
TWILIO_PHONE_NUMBER = config('TWILIO_PHONE_NUMBER', default='+10000000000')


# ----------------------------------------
# Jazzmin Admin panel configuration
# ----------------------------------------
JAZZMIN_SETTINGS = {
    "site_title": "Clinic Admin",
    "site_header": "Clinic Management System",
    "site_brand": "ClinicHub",
    "welcome_sign": "Welcome to the Clinic Admin Dashboard",
    "copyright": "ClinicHub © 2025",

    "search_model": ["patients.Patient", "doctors.Doctor"],

    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"app": "patients"},
        {"app": "doctors"},
        {"model": "appointments.Appointment"},
    ],

    "show_sidebar": True,
    "navigation_expanded": True,

    "icons": {
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "patients.Patient": "fas fa-user-injured",
        "doctors.Doctor": "fas fa-user-md",
        "appointments.Appointment": "fas fa-calendar-check",
        "prescriptions.Prescription": "fas fa-file-medical",
        "archives.MedicalRecord": "fas fa-archive",
    },

    "default_icon_parents": "fas fa-clinic-medical",
    "default_icon_children": "fas fa-circle",

    "related_modal_active": True,
}

JAZZMIN_UI_TWEAKS = {
    "theme": "materia",
    "accent": "accent-primary",
    "navbar": "navbar-white navbar-light",
    "sidebar": "sidebar-dark-primary",
    "actions_sticky_top": True,

    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success"
    },

    "rounded_corners": True,
    "hover_effects": True,
    "dark_mode_theme": None,  # أو "cyborg" إذا تحبين الوضع الليلي
}

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
